// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ユーザーの役割
enum Role {
  ADMIN
  USER
}

// 地域
enum Region {
  TOKYO
  OSAKA
  OKINAWA
}

model User {
  id                    String   @id @default(uuid())
  email                 String   @unique
  password              String
  name                  String?
  role                  Role     @default(USER)
  aboutSlug             String?  @unique
  aboutContent          String   @default("")
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // セッション情報とのリレーション
  sessions              Session[]
  
  // アカウントロック機能用のフィールド
  failedLoginAttempts   Int      @default(0)
  isLocked              Boolean  @default(false)
  lockedAt              DateTime?
  
  // ログイン履歴とのリレーション
  loginHistories        LoginHistory[]
}

// ログイン履歴を保存するモデル
model LoginHistory {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  ipAddress String
  userAgent String
  loginAt   DateTime @default(now())
}


model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id          String     @id @default(uuid())
  name        String
  price       Int
  cartItems   CartItem[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model CartSession {
  id        String     @id @default(uuid())
  cartItems CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id            String      @id @default(uuid())
  productId     String
  quantity      Int
  cartSessionId String
  product       Product     @relation(fields: [productId], references: [id])
  cartSession   CartSession @relation(fields: [cartSessionId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}


model NewsItem {
  id          Int      @id @default(autoincrement())
  title       String
  region      Region
  publishedAt DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model StolenContent {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
}
